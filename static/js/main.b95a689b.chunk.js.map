{"version":3,"sources":["components/Header/HeaderIconButton.tsx","components/Common/LocaleSelector.tsx","components/Header/Header.tsx","components/Steps/StepIcon.tsx","View/StepView/configs.ts","components/Steps/StepStatus.tsx","api/functions/PaymentResHandlers.ts","api/functions/sendPaymentRequest.ts","api/API.ts","routes/routes.ts","View/StepView/functions/StepHandlers.ts","View/StepView/functions/useStepView.ts","locales/index.ts","components/Common/IntlFormattedMessage.tsx","components/Steps/StepOneMyData.tsx","components/Steps/StepThreeOrderConfirmation.tsx","containers/Steps/StepThreeOrderConfirmationContainer.tsx","static/images.ts","components/Steps/StepTwoPayment.tsx","View/StepView/StepView.tsx","lib/hooks/useLocale.ts","App.tsx","reportWebVitals.ts","themes/theme.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","display","alignItems","paddingRight","spacing","backgroundColor","icon","fontSize","fill","palette","primary","main","titleWrapper","paddingLeft","HeaderIconButton","props","IconComponent","titleComponent","classes","Box","className","memo","LocaleSelector","allLocales","localeVal","onChangeLocale","Select","value","onChange","map","locale","MenuItem","localeName","justifyContent","padding","iconsWrapper","Header","iconButtonListData","otherProps","HelpOutline","Typography","AccountCircleRounded","TranslateOutlined","data","i","key","width","height","margin","isDone","borderRadius","color","StepIcon","stepNum","CheckOutlined","stepTitles","paddingBottom","middleLine","position","top","borderTop","stepTitle","paddingTop","StepItem","paddingX","variant","align","getStepListData","stepNow","title","StepStatus","PaymentResHandlers","parseRes","res","zh_CN","message","en","sendPaymentRequest","options","a","isPaymentSuccess","Math","random","fetch","then","json","undefined","routes","checkout","StepHandlers","convertParamsToStep","params","convertStepToParams","step","useStepView","useParams","history","useHistory","initStepNow","useIntl","useState","setStepNow","paymentRes","setPaymentRes","loading","setLoading","name","lastName","paymentInfo","formValues","setForm","handlePay","useCallback","push","handleChangeStep","handleSetForm","e","f","target","useEffect","AllLocaleMessages","common","ALL_LOCALES","dark","whiteSpace","IntlFormattedMessage","values","localeKey","id","defaultMessage","txt","inputWrapper","maxWidth","inputKeys","StepOneMyData","onContinue","onInputForm","TextField","fullWidth","error","label","toUpperCase","placeholder","required","textAlign","Button","disabled","onClick","ArrowRight","StepThreeOrderConfirmation","intlPaymentInfo","Done","style","StepThreeOrderConfirmationContainer","images","src","process","bottomWrapper","infoWrapper","border","buttonsWrapper","StepTwoPayment","onBack","onPay","CreditCard","icon_master_card","icon_visa","img","alt","ArrowLeft","CircularProgress","flexDirection","stepsWrapper","StepView","Container","Paper","elevation","useLocale","setLocale","handleChangeLocale","messages","getLocaleMessages","minHeight","App","exact","path","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","ReactDOM","render","StrictMode","basename","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b95a689b.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\nimport { HeaderIconButtonProps } from './types';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingRight: theme.spacing(2),\n    '&:hover': {\n      backgroundColor: '#ddd',\n    }\n  },\n  icon: {\n    fontSize: '2em',\n    fill: theme.palette.primary.main,\n  },\n  titleWrapper: {\n    paddingLeft: theme.spacing(1),\n  }\n}));\n\nconst HeaderIconButton = (props: HeaderIconButtonProps) => {\n  const {\n    IconComponent,\n    titleComponent,\n  } = props;\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box>\n        <IconComponent className={classes.icon} />\n      </Box>\n      <Box className={classes.titleWrapper}>\n        {titleComponent}\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(HeaderIconButton);","import React, { memo } from 'react';\nimport { Box, MenuItem, Select, SelectProps } from '@material-ui/core';\nimport { Locales } from 'types';\nimport { ALL_LOCALES } from 'locales';\n\nexport interface LocaleSelectorProps {\n  allLocales: typeof ALL_LOCALES\n  localeVal: Locales\n  onChangeLocale: SelectProps['onChange']\n}\n\nconst LocaleSelector = (props: LocaleSelectorProps) => {\n  const {\n    allLocales,\n    localeVal,\n    onChangeLocale,\n  } = props;\n\n  return (\n    <Select\n      value={localeVal}\n      onChange={onChangeLocale}\n    >\n      {allLocales.map((locale) => (\n        <MenuItem\n          key={locale.locale}\n          value={locale.locale}\n        >\n          {locale.localeName}\n        </MenuItem>\n      ))}\n    </Select>\n  );  \n};\n\nexport default memo(LocaleSelector);","import React, { memo } from 'react';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport { AccountCircleRounded, Flag, HelpOutline, QuestionAnswerRounded, TranslateOutlined } from '@material-ui/icons';\nimport HeaderIconButton from './HeaderIconButton';\nimport { HeaderProps } from './types';\nimport LocaleSelector from 'components/Common/LocaleSelector';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    padding: `${theme.spacing(2)}px 0px`,\n  },\n  iconsWrapper: {\n    display: 'flex',\n  }\n}));\n\nconst Header = (props: HeaderProps) => {\n  const classes = useStyles();\n  const iconButtonListData = [\n    {\n      otherProps: {},\n      icon: HelpOutline,\n      titleComponent: (\n        <Typography>{'HELP'}</Typography>\n      ),\n    },\n    {\n      otherProps: {},\n      icon: AccountCircleRounded,\n      titleComponent: (\n        <Typography>{'SIGN IN'}</Typography>\n      ),\n    },\n    {\n      otherProps: props,\n      icon: TranslateOutlined,\n      titleComponent: (\n        <LocaleSelector {...props} />\n      ),\n    },\n  ];\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.iconsWrapper}>\n        {iconButtonListData.map((data, i) => (\n          <HeaderIconButton\n            {...data.otherProps}\n            key={i}\n            IconComponent={data.icon}\n            titleComponent={data.titleComponent}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(Header);","import { Box, makeStyles, Theme } from '@material-ui/core';\nimport { CheckOutlined } from '@material-ui/icons';\nimport { memo } from 'react';\nimport { StepStatusItemProps } from './types';\n\nexport interface StepIconProps extends Pick<StepStatusItemProps, 'isDone' | 'stepNum'> {\n  \n}\n\nconst useStyles = makeStyles<Theme, StepIconProps>(theme => ({\n  root: props => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: theme.spacing(5),\n    height: theme.spacing(5),\n    margin: 'auto',\n    backgroundColor: props.isDone ? '#60A918' : '#1BA0E1',\n    borderRadius: '100%',\n    color: '#fff',\n    fontSize: 26,\n  })\n}));\n\nconst StepIcon = (props: Pick<StepStatusItemProps, 'isDone' | 'stepNum'>) => {\n  const {\n    isDone,\n    stepNum,\n  } = props;\n  const classes = useStyles(props);\n\n  return (\n    <Box className={classes.root}>\n      {isDone ? <CheckOutlined /> : stepNum}\n    </Box>\n  );\n};\n\nexport default memo(StepIcon);","import routes from 'routes/routes';\n\nexport const stepTitles = [\n  'My Data', 'Payment'\n];\n\nexport const PAYMENT_FAILED_PROPABILITY = 0.05;","import React, { Fragment, memo, ReactNode } from 'react';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport { CheckOutlined } from '@material-ui/icons';\nimport { SingleStepStatusData, StepStatusItemProps, StepStatusProps } from './types';\nimport StepIcon from './StepIcon';\nimport { stepTitles } from 'View/StepView/configs';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    paddingBottom: theme.spacing(3),\n  },\n  middleLine: {\n    position: 'relative',\n    top: theme.spacing(2.5),\n    width: 100,\n    borderTop: '1px dashed #000',\n  },\n  stepTitle: {\n    paddingTop: theme.spacing(1)\n  }\n}));\n\nconst StepItem = (props: StepStatusItemProps) => {\n  const {\n    stepTitle\n  } = props;\n  const classes = useStyles();\n  return (\n    <Box paddingX={1}>\n      <StepIcon {...props} />\n      <Typography className={classes.stepTitle} variant={'h6'} align={'center'}>\n        {stepTitle}\n      </Typography>\n    </Box>\n  );\n};\n\nconst getStepListData = (stepNow: number): SingleStepStatusData[] => stepTitles.map((title, i) => ({\n  stepTitle: title,\n  stepNum: i + 1,\n  isDone: stepNow > (i + 1)\n}));\n\nconst StepStatus = ({\n  stepNow\n}: StepStatusProps) => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      {getStepListData(stepNow).map((data, i) => (\n        <Fragment key={i}>\n          {i > 0 && (\n            <Box className={classes.middleLine} />\n          )}\n          <StepItem {...data}/>\n        </Fragment>\n      ))}\n    </Box>\n  );\n};\n\nexport default memo(StepStatus);","import { StepThreeOrderConfirmationProps } from 'components/Steps/types';\nimport { Locales, PaymentSuccessResponse } from 'types';\n\nconst PaymentResHandlers = {\n  parseRes(res: PaymentSuccessResponse): StepThreeOrderConfirmationProps['intlPaymentInfo'] {\n    return ({\n      'zh-cn': {\n        title: res.title.zh_CN,\n        message: res.message.zh_CN,\n      },\n      'en': {\n        title: res.title.en,\n        message: res.message.en,\n      }\n    });\n  }\n};\n\nexport default PaymentResHandlers;","import { ORDER_CONFIRMATION_API } from 'api/API';\nimport { Locales, PaymentFormValues, PaymentSuccessResponse } from 'types';\nimport { PAYMENT_FAILED_PROPABILITY } from 'View/StepView/configs';\n\nexport interface PaymentInfoOptions extends PaymentFormValues {\n}\n\nexport interface PaymentSuccessInfo {\n  \n}\n\n// add options for future usage\nconst sendPaymentRequest = async (options: PaymentInfoOptions): Promise<PaymentSuccessResponse | undefined> => {\n  const isPaymentSuccess = Math.random() > PAYMENT_FAILED_PROPABILITY;\n  const res = await fetch(ORDER_CONFIRMATION_API).then(res => res.json());\n  if(isPaymentSuccess) {\n    return res;\n  }\n  return undefined;\n};\n\nexport default sendPaymentRequest;","export const ORDER_CONFIRMATION_API = 'https://run.mocky.io/v3/5fd5b0a0-7cec-4ccf-bdec-b9c99c78e29f';","export type RoutesCheckoutParamsKey = \n  'step-1-my-data' |\n  'step-2-payment' | \n  'step-3-order-confirmation'\n\nconst routes = {\n  checkout: {\n    'step-1-my-data': 'step-1-my-data',\n    'step-2-payment': 'step-2-payment',\n    'step-3-order-confirmation': 'step-3-order-confirmation',\n  }\n};\n\nexport default routes;","import routes, { RoutesCheckoutParamsKey } from 'routes/routes';\n\nconst StepHandlers = {\n  convertParamsToStep(params: RoutesCheckoutParamsKey) {\n    switch (params) {\n      case 'step-1-my-data':\n        return 1;\n      case 'step-2-payment':\n        return 2;\n      case 'step-3-order-confirmation':\n        return 3;\n      default:\n        return 1;\n    }\n  },\n  convertStepToParams(step: number): RoutesCheckoutParamsKey {\n    switch (step) {\n      case 1:\n        return 'step-1-my-data';\n      case 2:\n        return 'step-2-payment';\n      case 3:\n        return 'step-3-order-confirmation';\n      default:\n        return 'step-1-my-data';\n    }\n  }\n};\n\nexport default StepHandlers;","import PaymentResHandlers from 'api/functions/PaymentResHandlers';\nimport sendPaymentRequest from 'api/functions/sendPaymentRequest';\nimport { StepThreeOrderConfirmationProps } from 'components/Steps/types';\nimport { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useHistory, useParams } from 'react-router-dom';\nimport routes, { RoutesCheckoutParamsKey } from 'routes/routes';\nimport { Locales, PaymentFormValues } from 'types';\nimport StepHandlers from './StepHandlers';\n\nconst useStepView = () => {\n  const {\n    step\n  } = useParams<{ step: RoutesCheckoutParamsKey }>();\n  const history = useHistory();\n  const {\n    locale,\n  } = useIntl();\n  const initStepNow = StepHandlers.convertParamsToStep(step);\n\n  const [stepNow, setStepNow] = useState(initStepNow || 1);\n  const [paymentRes, setPaymentRes] = useState<StepThreeOrderConfirmationProps['intlPaymentInfo']>();\n  const [loading, setLoading] = useState(false);\n  const [formValues, setForm] = useState<PaymentFormValues>({\n    name: '',\n    lastName: '',\n    paymentInfo: undefined,\n  });\n\n  const handlePay = useCallback(() => {\n    (async () => {\n      setLoading(true);\n      const res = await sendPaymentRequest(formValues);\n      setLoading(false);\n      if(res) {\n        setPaymentRes(\n          PaymentResHandlers.parseRes(res)\n        );\n      }\n      history.push(`/checkout/${routes.checkout['step-3-order-confirmation']}`);\n    })();\n  }, [formValues, history]);\n\n  const handleChangeStep = useCallback((step: number) => {\n    // setStepNow(s => step || s + 1);\n    const params = StepHandlers.convertStepToParams(step);\n    history.push(`/checkout/${params}`);\n  }, [history]);\n\n  const handleSetForm = useCallback((key: keyof PaymentFormValues) => (e: ChangeEvent<any>) => {\n    setForm(f => ({\n      ...f,\n      [key]: e.target.value\n    }));\n  }, []);\n\n  useEffect(() => {\n    const stepNow = StepHandlers.convertParamsToStep(step);\n    setStepNow(stepNow);\n  }, [step]);\n\n  return ({\n    loading,\n    stepNow,\n    formValues,\n    paymentRes,\n    handlePay,\n    handleChangeStep,\n    handleSetForm,\n    setStepNow,\n  });\n};\n\nexport default useStepView;","import { Locales } from 'types';\nimport common from './common.locale.json';\n\nexport type LocaleKeys = keyof typeof common['zh-cn']\n\nexport const AllLocaleMessages = {\n  'zh-cn': {\n    ...common['zh-cn']\n  },\n  'en': {\n    ...common['en']\n  }\n};\n\nexport const getLocaleMessages = (locale: Locales) => {\n  switch (locale) {\n    case 'zh-cn':\n      return AllLocaleMessages['zh-cn'];\n    case 'en':\n      return AllLocaleMessages['en'];\n    default:\n      return AllLocaleMessages['en'];\n  }\n};\n\nexport const ALL_LOCALES: {\n  locale: Locales,\n  localeName: string\n}[] = [\n  {\n    locale: 'en',\n    localeName: 'EN'\n  },\n  {\n    locale: 'zh-cn',\n    localeName: 'CN'\n  }\n];","import React from 'react';\r\nimport { Box, Typography, TypographyProps, makeStyles, Theme } from '@material-ui/core';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { AllLocaleMessages, LocaleKeys } from 'locales';\r\n\r\n\r\nexport interface IntlFormattedMessageProps<Values> extends TypographyProps {\r\n  values?: Values,\r\n  localeKey: LocaleKeys,\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, IntlFormattedMessageProps<any>>(theme => ({\r\n  root: {\r\n    color: props => props.color === 'primary' ? theme.palette.primary.dark : props.color,\r\n    whiteSpace: 'pre-wrap',\r\n  }\r\n}));\r\n\r\nfunction IntlFormattedMessage<Values extends Record<string, any>>(props: IntlFormattedMessageProps<Values>) {\r\n  const {\r\n    values,\r\n    localeKey,\r\n    variant,\r\n  } = props;\r\n  const classes = useStyles(props);\r\n  \r\n  return (\r\n    <>\r\n      <FormattedMessage\r\n        id={localeKey}\r\n        defaultMessage={AllLocaleMessages['zh-cn'][localeKey]}\r\n        values={values}>\r\n        {txt => (\r\n          <Typography\r\n            className={classes.root}\r\n            {...props}\r\n            variant={variant}\r\n          >\r\n            {txt}\r\n          </Typography>\r\n        )}\r\n      </FormattedMessage>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IntlFormattedMessage;","import React, { memo } from 'react';\nimport { Box, Button, makeStyles, TextField, Typography } from '@material-ui/core';\nimport { ArrowRight, Title } from '@material-ui/icons';\nimport { stepTitles } from 'View/StepView/configs';\nimport { StepOneMyDataProps } from './types';\nimport IntlFormattedMessage from 'components/Common/IntlFormattedMessage';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n     \n  },\n  inputWrapper: {\n    maxWidth: 400,\n    margin: 'auto',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n}));\n\nconst inputKeys: Array<(keyof StepOneMyDataProps['values'])> = [\n  'name', 'lastName'\n];\n\nconst StepOneMyData = (props: StepOneMyDataProps) => {\n  const {\n    values,\n    onContinue,\n    onInputForm,\n  } = props;\n  const classes = useStyles();\n  \n  return (\n    <Box>\n      <div className={`${'title-info-wrapper'}`}>\n        <Typography variant={'h4'}>\n          {stepTitles[0]}\n        </Typography>\n        <Typography>\n          {'Please enter your personal data and press continue'}\n        </Typography>\n      </div>\n      <Box className={classes.inputWrapper}>\n        {(inputKeys).map((key) => (\n          <Box paddingBottom={3}>\n            <TextField\n              key={key}\n              fullWidth={true}\n              variant={'outlined'}\n              error={!values[key]}\n              name={key}\n              label={key.toUpperCase()}\n              placeholder={key}\n              required={true}\n              value={values[key]}\n              onChange={onInputForm(key)} \n            />\n          </Box>\n        ))}\n        <Box textAlign={'right'}>\n          <Button\n            variant={'outlined'}\n            color={'primary'}\n            disabled={!(values.lastName && values.name)}\n            onClick={onContinue}\n          >\n            <IntlFormattedMessage \n              localeKey={'continue'}\n            />\n            <ArrowRight />\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(StepOneMyData);","import React, { memo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport { Done } from '@material-ui/icons';\nimport { StepThreeOrderConfirmationProps } from './types';\nimport useLocale from 'lib/hooks/useLocale';\nimport { useIntl } from 'react-intl';\nimport { Locales } from 'types';\n\nconst StepThreeOrderConfirmation = (props: StepThreeOrderConfirmationProps) => {\n  const {\n    locale,\n  } = useIntl();\n  if(!props.intlPaymentInfo) {\n    return (\n      <Typography variant={'h4'}>\n        {'Payment failed :('}\n        {/* <Redirect to={`/checkout/${routes.checkout['step-1-my-data']}`} /> */}\n      </Typography>\n    );\n  }\n  return (\n    <Box>\n      <Typography variant={'h4'}>\n        {props.intlPaymentInfo[locale as Locales].title}\n      </Typography>\n      <Done style={{\n        fontSize: '8em',\n      }} />\n      <Typography>\n        {props.intlPaymentInfo[locale as Locales].message}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default memo(StepThreeOrderConfirmation);","import React, { memo } from 'react';\nimport { Box, CircularProgress } from '@material-ui/core';\nimport { StepThreeOrderConfirmationContainerProps } from './types';\nimport StepThreeOrderConfirmation from 'components/Steps/StepThreeOrderConfirmation';\nimport { Redirect } from 'react-router-dom';\nimport routes from 'routes/routes';\n\nconst StepThreeOrderConfirmationContainer = (props: StepThreeOrderConfirmationContainerProps) => {\n  return (\n    <StepThreeOrderConfirmation {...props} />\n  );\n};\n\nexport default memo(StepThreeOrderConfirmationContainer);","export interface SingleImage {\n  name: string\n  src: string\n}\n\nexport type ImageKeys = \n  'icon_visa' |\n  'icon_master_card' \n\nconst images: Record<ImageKeys, SingleImage> = {\n  'icon_visa': {\n    name: 'icon_visa',\n    src: process.env.PUBLIC_URL + '/assets/icon_visa.png',\n  },\n  'icon_master_card': {\n    name: 'icon_master_card',\n    src: process.env.PUBLIC_URL + '/assets/icon_master_card.png',\n  },\n};\n\nexport default images;","import React, { memo } from 'react';\nimport { Box, Button, CircularProgress, makeStyles, Typography } from '@material-ui/core';\nimport { stepTitles } from 'View/StepView/configs';\nimport { ArrowLeft, ArrowRight, CreditCard } from '@material-ui/icons';\nimport images from 'static/images';\nimport { StepTwoPaymentProps } from './types';\nimport IntlFormattedMessage from 'components/Common/IntlFormattedMessage';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n     \n  },\n  bottomWrapper: {\n    maxWidth: 400,\n    margin: 'auto',\n  },\n  infoWrapper: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    border: '1px solid #aaa',\n    borderRadius: theme.spacing(0.5),\n    '& img': {\n      maxWidth: 60,\n    }\n  },\n  buttonsWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingTop: theme.spacing(2),\n  }\n}));\n\nconst StepTwoPayment = (props: StepTwoPaymentProps) => {\n  const {\n    loading,\n    onBack,\n    onPay,\n  } = props;\n  const classes = useStyles();\n\n  return (\n    <Box>\n      <div className={`${'title-info-wrapper'}`}>\n        <Typography variant={'h4'}>\n          {stepTitles[1]}\n        </Typography>\n        <Typography>\n          {'After making the payment you will receive a con'}\n        </Typography>\n      </div>\n      <Box className={classes.bottomWrapper}>\n        <Box className={classes.infoWrapper}>\n          <Box>\n            <CreditCard style={{\n              fontSize: '6em'\n            }} />\n            <Typography variant={'h5'}>{'Credit Card'}</Typography>\n          </Box>\n          <Typography>\n            {`You will be redirected to a secure payment platform. This is a\n            secure process. The validation of your payment can take up to\n            24 hours.`}\n          </Typography>\n          <Box>\n            {[images.icon_master_card, images.icon_visa].map((img, i) => (\n              <img key={i} src={img.src} alt={img.name} />\n            ))}\n          </Box>\n        </Box>\n        <Box className={classes.buttonsWrapper}>\n          <Button variant={'outlined'} color={'primary'} onClick={onBack} disabled={loading}>\n            <ArrowLeft />\n            <IntlFormattedMessage\n              localeKey={'back'}\n            />\n          </Button>\n          <Button variant={'outlined'} color={'primary'} onClick={onPay} disabled={loading}>\n            {loading ? (\n              <CircularProgress />\n            ) : (\n              <>\n                <IntlFormattedMessage\n                  localeKey={'button.pay'}\n                />\n                <ArrowRight />\n              </>\n            )}\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(StepTwoPayment);","import React, { memo } from 'react';\nimport { Box, CircularProgress, Container, makeStyles, Paper } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport StepStatus from 'components/Steps/StepStatus';\nimport useStepView from './functions/useStepView';\nimport StepOneMyData from 'components/Steps/StepOneMyData';\nimport StepThreeOrderConfirmationContainer from 'containers/Steps/StepThreeOrderConfirmationContainer';\nimport StepTwoPayment from 'components/Steps/StepTwoPayment';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n  },\n  stepsWrapper: {\n    padding: theme.spacing(5),\n  }\n}));\n\nconst StepView = () => {\n  const {\n    stepNow,\n    loading,\n    formValues,\n    paymentRes,\n    handleChangeStep,\n    handlePay,\n    handleSetForm,\n  } = useStepView();\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.root}>\n      <StepStatus stepNow={stepNow} />\n      {/* {loading && (\n        <CircularProgress />\n      )} */}\n      <Paper elevation={3} className={classes.stepsWrapper}>\n        {stepNow === 1 && (\n          <StepOneMyData\n            values={formValues}\n            onContinue={() => handleChangeStep(2)}\n            onInputForm={handleSetForm}\n          />\n        )}\n        {stepNow === 2 && (\n          <StepTwoPayment\n            loading={loading}\n            onBack={() => handleChangeStep(1)}\n            onPay={handlePay}\n          />\n        )}\n        {stepNow === 3 && (\n          <StepThreeOrderConfirmationContainer \n            intlPaymentInfo={paymentRes} \n          />\n        )}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default memo(StepView);","import { getLocaleMessages } from 'locales';\nimport { ChangeEvent, useCallback, useMemo, useState } from 'react';\nimport { Locales } from 'types';\n\nconst useLocale = () => {\n  const [localeVal, setLocale] = useState<Locales>('en');\n\n  const handleChangeLocale = useCallback((e: ChangeEvent<any>) => {\n    setLocale(e.target.value as Locales);\n  }, []);\n\n  const messages = getLocaleMessages(localeVal);\n\n  return ({\n    messages,\n    localeVal,\n    setLocale,\n    handleChangeLocale,\n  });\n};\n\nexport default useLocale;","import './App.css';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport Header from 'components/Header/Header';\nimport StepView from 'View/StepView/StepView';\nimport { IntlProvider } from 'react-intl';\nimport useLocale from 'lib/hooks/useLocale';\nimport { ALL_LOCALES } from 'locales';\nimport { Button, makeStyles } from '@material-ui/core';\nimport routes from 'routes/routes';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#eee',\n    minHeight: '100vh',\n  }\n}));\n\nfunction App() {\n  const {\n    messages,\n    localeVal,\n    handleChangeLocale,\n  } = useLocale();\n  const classes = useStyles();\n\n  return (\n    <IntlProvider locale={localeVal} messages={messages}>\n      <div className={classes.root}>\n        <Header\n          localeVal={localeVal}\n          allLocales={ALL_LOCALES}\n          onChangeLocale={handleChangeLocale}\n        />\n        <Switch>\n          <Route\n            exact\n            path={'/'}\n            component={\n              () => <Button>\n                <Link to={'/checkout/' + routes.checkout['step-1-my-data']}>{'Checkout'}</Link>\n              </Button>\n            }\n          />\n          <Route\n            path={'/checkout/:step'}\n            component={StepView}\n          />\n        </Switch>\n      </div>\n    </IntlProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1BA0E1',\n    }\n  }\n});\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport './index.css';\nimport 'styles/styles.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './themes/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}